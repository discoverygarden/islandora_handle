<?php

/**
 * @file
 * Install for the islandora_handle module.
 */

/**
 * Implements hook_install().
 */
function islandora_handle_install() {
  drupal_mkdir('public://islandora_handle_xsls');
}

/**
 * Implements hook_uninstall().
 */
function islandora_handle_uninstall() {
  $upload_path = 'public://islandora_handle_xsls';
  $removal_files = file_scan_directory($upload_path, '/(.*)/');

  foreach ($removal_files as $file) {
    @file_delete($file);
  }
  drupal_rmdir($upload_path);

  $variables = array(
    'islandora_handle_debug_mode',
    'islandora_handle_server_admin_password',
    'islandora_handle_server_admin_username',
    'islandora_handle_server_prefix',
    'islandora_handle_server_url',
    'islandora_handle_handler',
    'islandora_handle_use_alias',
    'islandora_handle_use_https',
  );
  array_walk($variables, 'variable_del');

  if (db_table_exists('islandora_handle_debug_handles')) {
    db_drop_table('islandora_handle_debug_handles');
  }
}

/**
 * Implements hook_schema().
 */
function islandora_handle_schema() {
  $schema['islandora_handle_apply_handle'] = array(
    'description' => 'Stores relations used in the Islandora Handle module',
    'fields' => array(
      'cmodel' => array(
        'description' => 'The content model of the object we are hooking on.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'datastream' => array(
        'description' => 'The datastream of the object to apply to.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'xsl_location' => array(
        'description' => 'The filesystem location of the XSL we are to apply.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cmodel', 'datastream'),
  );
  return $schema;
}

/**
 * Remove existing DC handle configs as they are automatically appended.
 */
function islandora_handle_update_7001(&$sandbox) {
  db_delete('islandora_handle_apply_handle')
    ->condition('datastream', 'DC')
    ->execute();
}

/**
 * Update the debug table if needed.
 */
function islandora_handle_update_7002() {
  if (db_table_exists('islandora_handle_debug_handles') && !db_field_exists('islandora_handle_debug_handles', 'handle')) {
    // First drop the primary key.
    db_drop_primary_key('islandora_handle_debug_handles');

    // Then change the field suffix to the field handle.
    $spec = array(
      'description' => 'The handle.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
    );
    $keys_new = array(
      'primary key' => array('handle'),
    );
    db_change_field('islandora_handle_debug_handles', 'suffix', 'handle', $spec, $keys_new);

    // And last update the handle to be prefix + suffix.
    $prefix = variable_get('islandora_handle_server_prefix', '1234567') . '/';
    db_update('islandora_handle_debug_handles')
      ->expression('handle', 'concat(:prefix, handle)', array(':prefix' => $prefix))
      ->execute();
  }
}
